<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAOMAAAD/AAAAfwAAAAD/ADwA/wA8Ff8A
        PIP/ADzV/wA83v8APK3/ADw4/wAAAAYAAQAAAACAAAAA/wAAAOMAAAAcAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAA4wAAAP8AAAB/JgAJAP8A
        PAz/ADyV/wA8yP8APIL/ADx2/wA8tP8APMz/ADwyTgASAAAAAH8AAAD/AAAA4wAAABwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAADjAAAA/wAA
        AH9nABgA/wA8Tv8APNj/ADw3/wA3AP8APQD/AD0U/wA8tP8APJoAAAAAAAAAfwAAAP8AAADjAAAAHAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAA
        AOMAAAD/AAAAf30AHQD/ADx9/wA8nv8AOgT/ADsAAAAAAP8APAD/ADx5/wA8xv8AVA0AAAB+AAAA/wAA
        AOMAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAcAAAA4wAAAP8AAAB/eAAcAP8APHL/ADy1/wA8Df8APAD/ADsA/wA8AP8APIP/ADy8/wBcCQAA
        AH4AAAD/AAAA4wAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABwAAADjAAAA/wAAAH9TABMA/wA7MP8APNH/ADxf/wA8C/8AOgX/ADs2/wA8yf8A
        PHUBAAIAAAAAfwAAAP8AAADjAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAOMAAAD/AAAAfxAABAD/AEAC/wA9Yv8APdL/AD20/wA8nP8A
        PNb/AD2U/wA/Ei0ACwAAAACAAAAA/wAAAOMAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABoAAAA1AAAA5gAAAP8AAACNAAAAGAAAABsWAAUdogAmTM0A
        MI7RADGZuwAsaVIAFCgAAAAaAAAAGAAAAI4AAAD/AAAA5gAAADUAAAAaAAAAHAAAABwAAAAcAAAAHAAA
        ABwAAAAcAAAA4wAAAOMAAADjAAAA4wAAAOMAAADjAAAA4wAAAOYAAAD8AAAA/wAAAPEAAADiAAAA4wAA
        AOMAAADhAAAA3wAAAN8AAADgAAAA4gAAAOMAAADiAAAA8QAAAP8AAAD8AAAA5gAAAOMAAADjAAAA4wAA
        AOMAAADjAAAA4wAAAOMAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAH8AAACOAAAA8QAA
        AP8AAAC/AAAAfgAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAfgAAAMAAAAD/AAAA8QAA
        AI4AAAB/AAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABwAAADjAAAA/wAAAH8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAA
        AP8AAADjAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/ADsA/wA7Cv8AOz7/ADxk/wA8Uv8A
        OxoAAAAAAAAAHAAAAOMAAAD/AAAAfwAAAAD/ADsA/wA7Af8AOyH/ADxY/wA8Yv8AOzf/ADsH/wA7AAAA
        AAAAAACAAAAA/wAAAOMAAAcdAAD/DQAA/wsAAP8AAAD/AAAA/wYAAP8RAAD/A/8APBf/ADyS/wA82v8A
        PNT/ADza/wA8w/8APTgAAAAbAAAA4wAAAP8AAAB/CgACAP8AQgH/ADxL/wA8yP8APNj/ADzV/wA83P8A
        PIT/ADsMJAAIAAAAAIAAAAD/AAAA4wAABBwAAP9UAAD/jgAA/xAAAP8BAAD/aQAA/4kAAP8L/wA8kP8A
        PMT/AD09/wA8F/8APCT/ADym/wA9wXsAHTYAAADiAAAA/wAAAH9MABIA/wA8Kf8APMz/ADx//wA8Hv8A
        PBf/ADxV/wA83f8APGk3AAwAAAAAfwAAAP8AAADjAAAAGwAA/xIAAP+pAAD/awAA/zkAAP/AAAD/RQAA
        /wD/ADze/wA7YP8AOwD/ADwA/wA8AP8APCX/AD3XvgAtbQAAAOAAAAD/AAAAf3YAGwD/ADts/wA8vv8A
        OxP/ADsA/wA9AP8AOgD/ADyJ/wA8t/8AZgcAAAB/AAAA/wAAAOMAAAAcAACBAAAA/zYAAP+9AAD/xQAA
        /3gAAP8CAAD/AP8APOP/ADwz/wA8AAAAAAD/ADwA/wA8Gf8APdLIAC+AAAAA3wAAAP8AAAB/fgAeAP8A
        PH//ADyY/wA5Av8AOwAAAAAA/wA8AP8APHj/ADzH/wBSDQAAAH4AAAD/AAAA4wAAABwAAEoAAAD/CAAA
        /6kAAP/mAAD/MgAA/wAAAAAA/wA8z/8APIP/ADwA/wA8AP8APAD/ADs+/wA82LEAKVoAAADgAAAA/wAA
        AH9sABkA/wA8Vv8APNP/ADwk/wA8AP8AOwD/ADoH/wA8ov8APKP/AOkCAAAAfwAAAP8AAADjAAAAHAAA
        gwAAAP9JAAD/vgAA/6UAAP+MAAD/CAAA/wD/ADxd/wA80/8APIP/ADwz/wA7Yf8APMb/AD2SPwAPJQAA
        AOIAAAD/AAAAfy8ACwD/ADwR/wA8rf8APLj/ADxT/wA7OP8APJb/ADzO/wA8PVEAEwAAAAB/AAAA/wAA
        AOMAAAAaAAD/IAAA/7kAAP9jAAD/IgAA/7cAAP9aAAD/Af8AOgb/ADxS/wA8uf8APMr/ADzH/wA8gP8A
        QxMAAAAbAAAA4wAAAP8AAAB/AQAAAP8APAD/ADsg/wA8jv8APMn/ADzK/wA8sf8APUP/AD4BCwADAAAA
        AIAAAAD/AAAA4wAAABsAAP9DAAD/eAAA/w4AAP8AAAD/RQAA/3UAAP8M/wBKAP8AUQD/AEMN/wBAGv8A
        QhP/AE4DFAAGAAAAABwAAADjAAAA/wAAAH8AAAAAAAAAAP8ARQD/AEcF/wBBFf8AQRn/AEYK/wCGAP8A
        VwAAAAAAAAAAgAAAAP8AAADjAAABHAAA/wIAAP8CAAD/AAAA/wAAAP8AAAD/BQAA/wEAAAAcAAAAHAAA
        ABsAAAAaAAAAGgAAABwAAAAaAAAANQAAAOYAAAD/AAAAjQAAABgAAAAcAAAAHAAAABsAAAAaAAAAGgAA
        ABsAAAAcAAAAHAAAABgAAACOAAAA/wAAAOYAAAA1AAAAGgAAABsAAAAcAAAAHAAAABwAAAAbAAAAHAAA
        AOMAAADjAAAA4wAAAOMAAADjAAAA4wAAAOMAAADmAAAA/AAAAP8AAADxAAAA4gAAAOMAAADjAAAA4wAA
        AOMAAADjAAAA4wAAAOMAAADjAAAA4gAAAPEAAAD/AAAA/AAAAOYAAADjAAAA4wAAAOMAAADjAAAA4wAA
        AOMAAADjAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAAB/AAAAjgAAAPEAAAD/AAAAvwAA
        AH4AAAGBAAAbjgAAFYsAAACAAAAAfwAADIUAAB+RAAAEggAAAH0AAADAAAAA/wAAAPEAAAGOAAAbjQAA
        FYsAAACAAAAAfwAADIUAAB6RAAAFgwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAA4wAA
        AP8AAAB/AAAIAAAA/wAAAP9SAAD/iQAA/w0AAP8AAAD/ZQAA/4YAAP8JAAAhAAAAAIAAAAD/AAAA4wAA
        ABwAAP9QAAD/iQAA/w0AAP8AAAD/ZQAA/4UAAP8KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABwAAADjAAAA/wAAAH8AAAAAAAD/AAAA/xQAAP+pAAD/awAA/zkAAP/AAAD/RQAA/wAAAAQAAAAAgAAA
        AP8AAADjAAAAGwAA/xIAAP+pAAD/awAA/zkAAP/AAAD/RQAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAHAAAAOMAAAD/AAAAfwAAAAAAAP8AAAD/AAAA/zYAAP+9AAD/xQAA/3gAAP8CAAD/AAAA
        AAAAAACAAAAA/wAAAOMAAAAcAACBAAAA/zYAAP+9AAD/xQAA/3gAAP8CAAD/AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAcAAAA4wAAAP8AAAB/AAAAAAAAAAAAAP8AAAD/CAAA/6kAAP/mAAD/MgAA
        /wAAAAAAAAAAAAAAAIAAAAD/AAAA4wAAABwAAEoAAAD/CAAA/6kAAP/mAAD/MgAA/wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAADjAAAA/wAAAH8AAAAAAAD/AAAA/wAAAP9JAAD/vgAA
        /6UAAP+MAAD/CAAA/wAAAAAAAAAAgAAAAP8AAADjAAAAHAAAgwAAAP9JAAD/vgAA/6UAAP+MAAD/CAAA
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAOMAAAD/AAAAfwAAAAAAAP8AAAD/IgAA
        /7cAAP9jAAD/IgAA/7UAAP9ZAAD/AAAACwAAAACAAAAA/wAAAOMAAAAaAAD/IAAA/7cAAP9jAAD/IgAA
        /7UAAP9ZAAD/AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAA4wAAAP8AAAB/AAAFAAAA
        /wAAAP9OAAD/hwAA/w8AAP8AAAD/TQAA/4QAAP8MAAAnAAAAAIAAAAD/AAAA4wAAABsAAP9MAAD/hwAA
        /w8AAP8AAAD/TQAA/4MAAP8O/hgYf/4QCH/+EYh//hHAf/4RwH/+EAh//hAIfwAAAAAAAAAAAAAAAAAA
        AAD+H/h/ghgYGAAQCAAAEAgBOBHAQTgRwEM4EYBBABAIAAAYCAjCHDgcAAAAAAAAAAAAAAAAAAAAAP4Y
        iAj+GBgB/hwYQf4cOEP+HBhB/hgYAP4YiAg=
</value>
  </data>
</root>